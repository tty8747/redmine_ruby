---

- name: "Template .gemrc to {{ item.key }} directory"
  template:
    src: "templates/.gemrc.j2"
    dest: "{{ item[1].value.settings.0.params.path }}/\
    users_private/{{ item[0].key }}/.gemrc"
    owner: "{{ item[0].key }}"
    group: "{{ item[1].value.settings.0.params.group }}"
    mode: '0770'
  with_nested:
    - "{{ lookup('dict', users) }}"
    - "{{ lookup('dict', group_dict) }}"

- name: "Clone redmine's repo"
  git:
    repo: "https://github.com/redmine/redmine"
    dest: "{{ item.value.settings.0.params.path }}/{{ item.value.settings.0.name }}"
  loop: "{{ lookup('dict', group_dict) }}"

- name: "Give user permissions"
  file:
    path: "{{ item.1.params.path }}/{{ item.1.name }}"
    owner: "{{ item.1.params.owner }}"
    group: "{{ item.1.name }}"
    recurse: "yes"
  loop: "{{ group_dict | dict2items | subelements('value.settings') }}"

- name: "Install dependencies"
  apt:
    pkg:
      - imagemagick
      - ghostscript
      - zlib1g-dev
      - libpq-dev

- name: "Template postgresql config"
  template:
    src: "roles/redmine/templates/database.yml.j2"
    dest: "{{ item.value.settings.0.params.path }}/\
    {{ item.value.settings.0.name }}/\
    config/database.yml"
    group: "{{ item.value.settings.0.params.group }}"
    mode: '0770'
  loop: "{{ lookup('dict', group_dict) }}"

- name: "Install gems from Gemfile"
  bundler:
    state: present
    user_install: "no"
    chdir: "{{ item.1.params.path }}/{{ item.1.name }}"
  loop: "{{ group_dict | dict2items | subelements('value.settings') }}"

- name: "Generate the secret token"
  command: "bundle exec rake generate_secret_token"
  args:
    chdir: "{{ item.1.params.path }}/{{ item.1.name }}"
  run_once: "true"
  loop: "{{ group_dict | dict2items | subelements('value.settings') }}"

- name: "Run the database migrations"
  command: "bundle exec rake db:migrate"
  args:
    chdir: "{{ item.1.params.path }}/{{ item.1.name }}"
  environment:
    RAILS_ENV: production
  run_once: "true"
  loop: "{{ group_dict | dict2items | subelements('value.settings') }}"

- name: "Run load default data"
  become_user: "{{ item.value.settings.0.params.owner }}"
  become: "yes"
  expect:
    command: "bundle exec rake redmine:load_default_data"
    timeout: 5
    responses:
      Select language(.*): 'en'
  args:
    chdir: "{{ item.value.settings.0.params.path }}/\
    {{ item.value.settings.0.name }}"
  environment:
    RAILS_ENV: production
  run_once: "true"
  loop: "{{ lookup('dict', group_dict) }}"
  no_log: true

- name: "Create the {{ item.value.settings.0.params.shared_folder }}"
  become_user: "{{ item.value.settings.0.params.owner }}"
  become: "yes"
  file:
    path: "{{ item.value.settings.0.params.path }}/\
    {{ item.value.settings.0.name }}/\
    {{ item.value.settings.0.params.shared_folder }}"
    state: directory
    group: "{{ item.value.settings.0.params.group }}"
    mode: '0770'
  loop: "{{ lookup('dict', group_dict) }}"

- name: "Create a directories for temp files"
  become_user: "{{ item[0].value.settings.0.params.owner }}"
  become: "yes"
  file:
    path: "{{ item[0].value.settings.0.params.path }}/\
    {{ item[0].value.settings.0.name }}/\
    {{ item[0].value.settings.0.params.shared_folder }}/{{ item[1] }}"
    state: directory
    group: "{{ item[0].value.settings.0.params.group }}"
    mode: '0770'
  with_nested:
    - "{{ lookup('dict', group_dict) }}"
    - ['log', 'pids', 'sockets']
